---
const { pageTitle } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/gh/iconoir-icons/iconoir@main/css/iconoir.css"
        />
        <title>{pageTitle}</title>
    </head>
    <body>
        <div class="page-content" id="page-content">
            <slot />
        </div>
    </body>
    <script>
        const openMenuButton = document.querySelector("#open-navigation");
        const closeMenuButton = document.querySelector("#close-navigation");
        const navLinks = document.querySelectorAll("div.nav-container ul li a");

        const navigation = document.querySelector("#navigation");

        openMenuButton?.addEventListener("click", () => {
            navigation?.classList.add("menu-active");
        });

        closeMenuButton?.addEventListener("click", () => {
            navigation?.classList.remove("menu-active");
        });

        navLinks.forEach(link => {
            link.addEventListener("click", () => {
                navigation?.classList.remove("menu-active");
            })
        })
    </script>
    <script>
        import { createGetCollection } from "astro/content/runtime";

        const header = document.querySelector("#header");

        let lastScrollTop = 0;
        window.addEventListener("scroll", () => {
            let currentScrollTop =
                window.scrollY || document.documentElement.scrollTop;

            if (currentScrollTop > lastScrollTop) {
                // Scrolling down
                header?.classList.add("hide");
            } else {
                // Scrolling up
                header?.classList.remove("hide");
            }

            lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;
        });
    </script>
    <script>
        const auditArrow = document.querySelector("#audit-arrow");
        const auditContent = document.querySelector("#systems-audit-content");

        const migrateArrow = document.querySelector("#migration-arrow");
        const migrateContent = document.querySelector("#migration-content")

        function expansionListener(arrow: any, content: any) {
            arrow.addEventListener("click", () => {
                const isHidden = content?.classList.toggle("hide-content");
                if (isHidden) {
                    arrow.classList.add("closed");
                } else {
                    arrow.classList.remove("closed");
                }
            });
        }

        expansionListener(auditArrow, auditContent);
        expansionListener(migrateArrow, migrateContent);
    </script>
</html>
